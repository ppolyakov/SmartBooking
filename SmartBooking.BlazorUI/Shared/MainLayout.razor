@using SmartBooking.BlazorUI.Services
@using SmartBooking.BlazorUI.Services.Provider
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject JwtAuthStateProvider AuthProvider
@inject IHttpClientFactory ClientFactory

@* Required *@
<MudThemeProvider />
<MudPopoverProvider />

@* Needed for dialogs *@
<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />

<PageTitle>SmartBooking.BlazorUI</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <AuthorizeView>
                <Authorized>
                    <MudText Color="Color.Success">Logged in as: @context.User.Identity?.Name</MudText>
                    <MudButton ButtonType="ButtonType.Button" Color="Color.Secondary" OnClick="Logout">Logout</MudButton>
                </Authorized>
                <NotAuthorized>
                    <MudText Color="Color.Error">Not logged in</MudText>
                </NotAuthorized>
            </AuthorizeView>
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {

    private async Task Logout()
    {
        await AuthProvider.MarkUserAsLoggedOut();
        NavigationManager.NavigateTo("/", forceLoad: true);
    }
}