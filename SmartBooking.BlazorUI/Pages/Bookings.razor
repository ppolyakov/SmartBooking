@attribute [Authorize(Roles = "Admin, User")]
@page "/bookings"
@inject IBookingService BookingService
@inject ISnackbar Snackbar

<MudPaper Class="p-4">
    <MudText Typo="Typo.h5" Class="mb-4">All Bookings</MudText>

    <MudDataGrid Items="_bookings" Hover="true" Dense="true">
        <Columns>
            <PropertyColumn Property="x => x.ServiceTitle" Title="Service" />
            <PropertyColumn Property="x => x.StartTime" Title="Start Time" />
            <PropertyColumn Property="x => x.ClientName" Title="Client Name" />
            <PropertyColumn Property="x => x.ClientEmail" Title="Client Email" />
        </Columns>
    </MudDataGrid>
</MudPaper>

@code {
    private List<BookingDto> _bookings = [];

    protected override async Task OnInitializedAsync()
    {
        var result = await BookingService.GetAllAsync();
        if (result.IsSuccess)
        {
            _bookings = result.Value;
        }
        else
        {
            Snackbar.Add($"Failed to load bookings: {result.ErrorMessage}", Severity.Error);
        }
    }
}